<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:element name="SetVar">
		<xs:complexType>
			<xs:attribute name="Type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Byte"/>
						<xs:enumeration value="Short"/>
						<xs:enumeration value="Integer"/>
						<xs:enumeration value="Long"/>
						<xs:enumeration value="Float"/>
						<xs:enumeration value="Double"/>
						<xs:enumeration value="String"/>
						<xs:enumeration value="Date"/>
						<xs:enumeration value="Time"/>
						<xs:enumeration value="DateTime"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="VarId" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
						<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Value" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="SQLIf">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="SQLThen" type="SQLBlockType" minOccurs="0"/>
				<xs:element name="SQLElse" type="SQLBlockType" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="Value1" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
						<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Operator" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="="/>
						<xs:enumeration value="!="/>
						<xs:enumeration value="&gt;"/>
						<xs:enumeration value="&gt;="/>
						<xs:enumeration value="&lt;"/>
						<xs:enumeration value="&lt;="/>
						<xs:enumeration value="EXIST"/>
						<xs:enumeration value="NOTEXIST"/>
						<xs:enumeration value="MATCH"/>
						<xs:enumeration value="NOTMATCH"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Value2" type="xs:string" use="optional" default=""/>
			<xs:attribute name="Type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Boolean"/>
						<xs:enumeration value="Byte"/>
						<xs:enumeration value="Short"/>
						<xs:enumeration value="Integer"/>
						<xs:enumeration value="Long"/>
						<xs:enumeration value="Float"/>
						<xs:enumeration value="Double"/>
						<xs:enumeration value="String"/>
						<xs:enumeration value="Date"/>
						<xs:enumeration value="Time"/>
						<xs:enumeration value="DateTime"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="SQLFor">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="SQLBlockType">
					<xs:attribute name="IndexId" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9])*\}"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="FromIndex" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="([0-9]{1,9})|(\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9])*\})"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="Count" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="([0-9]{1,9})|(\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\})"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="SQLBlockType">
		<xs:choice maxOccurs="unbounded">
			<xs:element name="OutputSQL">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="OutputField">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element ref="SQLIf"/>
			<xs:element ref="SQLFor"/>
		</xs:choice>
	</xs:complexType>
	<xs:element name="SelectRecordSet">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="SQLBlockType">
					<xs:attribute name="OutputId" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="KeyFieldName" use="optional" default="">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="((_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9])*)?"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="RecordCountId" use="optional" default="">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="(\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\})?"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="DecryptFieldNames" type="xs:string" use="optional" default=""/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="SelectRecord">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="SQLBlockType">
					<xs:attribute name="OutputId" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1"/>
								<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="RecordCountId" use="optional" default="">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="(\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\})?"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="DecryptFieldNames" type="xs:string" use="optional" default=""/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="SelectField">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="SQLBlockType">
					<xs:attribute name="OutputId" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1"/>
								<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="DecryptFieldNames" type="xs:string" use="optional" default=""/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="Insert">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="SQLBlockType"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="Update">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="SQLBlockType">
					<xs:attribute name="RecordCountId" use="optional" default="">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="(\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\})?"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="Delete">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="SQLBlockType">
					<xs:attribute name="RecordCountId" use="optional" default="">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="(\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\})?"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="SelectConnection">
		<xs:complexType>
			<xs:attribute name="BigTableName" type="xs:string" use="optional" default=""/>
			<xs:attribute name="IdFieldId" use="optional" default="">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="(\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\})*"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="Commit"/>
	<xs:element name="Rollback"/>
	<xs:element name="HandleTrans">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="Field">
					<xs:complexType>
						<xs:attribute name="Id" use="required">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="ValueId" use="required">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="Value">
					<xs:complexType>
						<xs:attribute name="Id" use="required">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="Type" use="required">
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="Boolean"/>
									<xs:enumeration value="Byte"/>
									<xs:enumeration value="Short"/>
									<xs:enumeration value="Integer"/>
									<xs:enumeration value="Long"/>
									<xs:enumeration value="Float"/>
									<xs:enumeration value="Double"/>
									<xs:enumeration value="String"/>
									<xs:enumeration value="Date"/>
									<xs:enumeration value="Time"/>
									<xs:enumeration value="DateTime"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="Value" type="xs:string" use="required"/>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:attribute name="ServiceName" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.)*"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="TransName" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.)*"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="ResponseId" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
						<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="ReturnId" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
						<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="BlockType">
		<xs:choice maxOccurs="unbounded">
			<xs:element ref="Insert"/>
			<xs:element ref="Update"/>
			<xs:element ref="Delete"/>
			<xs:element ref="SelectField"/>
			<xs:element ref="SelectRecord"/>
			<xs:element ref="SelectRecordSet"/>
			<xs:element ref="If"/>
			<xs:element ref="For"/>
			<xs:element ref="SetVar"/>
			<xs:element ref="Return"/>
			<xs:element ref="Break"/>
			<xs:element ref="SelectConnection"/>
			<xs:element ref="Commit"/>
			<xs:element ref="Rollback"/>
			<xs:element ref="HandleTrans"/>
			<xs:element ref="Log"/>
		</xs:choice>
	</xs:complexType>
	<xs:element name="Break"/>
	<xs:element name="For">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="BlockType">
					<xs:attribute name="IndexId" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:minLength value="1"/>
								<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="FromIndex" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="([0-9]{1,9})|(\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\})"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="Count" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:pattern value="([0-9]{1,9})|(\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\})"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="If">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Then" type="BlockType" minOccurs="0"/>
				<xs:element name="Else" type="BlockType" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="Value1" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
						<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Operator" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="="/>
						<xs:enumeration value="!="/>
						<xs:enumeration value="&gt;"/>
						<xs:enumeration value="&gt;="/>
						<xs:enumeration value="&lt;"/>
						<xs:enumeration value="&lt;="/>
						<xs:enumeration value="EXIST"/>
						<xs:enumeration value="NOTEXIST"/>
						<xs:enumeration value="MATCH"/>
						<xs:enumeration value="NOTMATCH"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Value2" type="xs:string" use="optional" default=""/>
			<xs:attribute name="Type" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Boolean"/>
						<xs:enumeration value="Byte"/>
						<xs:enumeration value="Short"/>
						<xs:enumeration value="Integer"/>
						<xs:enumeration value="Long"/>
						<xs:enumeration value="Float"/>
						<xs:enumeration value="Double"/>
						<xs:enumeration value="String"/>
						<xs:enumeration value="Date"/>
						<xs:enumeration value="Time"/>
						<xs:enumeration value="DateTime"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="ReturnItem">
		<xs:complexType>
			<xs:attribute name="FieldId" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="ValueId" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\}"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="Return">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ReturnItem" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="Code" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="(-?[0-9]{1,9})|(\{(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.|\[|\])*\})"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Info" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Text" use="optional" default="OK">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="OnError">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Return"/>
			</xs:sequence>
			<xs:attribute name="Code" type="xs:int" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="OnException">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="OnError" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="Return"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="SQLTrans">
		<xs:complexType>
			<xs:sequence>
				<xs:choice maxOccurs="unbounded">
					<xs:element ref="Insert"/>
					<xs:element ref="Update"/>
					<xs:element ref="Delete"/>
					<xs:element ref="SelectField"/>
					<xs:element ref="SelectRecord"/>
					<xs:element ref="SelectRecordSet"/>
					<xs:element ref="If"/>
					<xs:element ref="For"/>
					<xs:element ref="SetVar"/>
					<xs:element ref="SelectConnection"/>
					<xs:element ref="Commit"/>
					<xs:element ref="Rollback"/>
					<xs:element ref="HandleTrans"/>
					<xs:element ref="Log"/>
				</xs:choice>
				<xs:element ref="OnException"/>
				<xs:element ref="Return"/>
			</xs:sequence>
			<xs:attribute name="TransName" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:minLength value="1"/>
						<xs:pattern value="(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|\.)*"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="TransFlag" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:int">
						<xs:enumeration value="0"/>
						<xs:enumeration value="1"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="DataGroupId" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9])*)*"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="BigTableGroupId" use="optional">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9])*)*"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="FieldType">
		<xs:attribute name="Name" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:minLength value="1"/>
					<xs:pattern value="(_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9]|.)*"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="Type" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Boolean"/>
					<xs:enumeration value="BooleanArray"/>
					<xs:enumeration value="Byte"/>
					<xs:enumeration value="ByteArray"/>
					<xs:enumeration value="Short"/>
					<xs:enumeration value="ShortArray"/>
					<xs:enumeration value="Integer"/>
					<xs:enumeration value="IntegerArray"/>
					<xs:enumeration value="Long"/>
					<xs:enumeration value="LongArray"/>
					<xs:enumeration value="Float"/>
					<xs:enumeration value="FloatArray"/>
					<xs:enumeration value="Double"/>
					<xs:enumeration value="DoubleArray"/>
					<xs:enumeration value="String"/>
					<xs:enumeration value="StringArray"/>
					<xs:enumeration value="Date"/>
					<xs:enumeration value="DateArray"/>
					<xs:enumeration value="Time"/>
					<xs:enumeration value="TimeArray"/>
					<xs:enumeration value="DateTime"/>
					<xs:enumeration value="DateTimeArray"/>
					<xs:enumeration value="CDO"/>
					<xs:enumeration value="CDOArray"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:element name="DataService">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="SQLTrans" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="DataGroupId" use="optional" default="">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="((_|_|[a-z]|[A-Z])(_|_|[a-z]|[A-Z]|[0-9])*)*"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="Log">
		<xs:complexType>
			<xs:attribute name="Level" use="optional" default="debug">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="debug"/>
						<xs:enumeration value="info"/>
						<xs:enumeration value="warn"/>
						<xs:enumeration value="error"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="Text" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
